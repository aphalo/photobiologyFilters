%\VignetteEngine{knitr}
%\VignetteIndexEntry{User Guide}
%\VignetteDepends{knitr, ggplot2}
%\VignetteKeyword{misc}

\documentclass{article}

\usepackage[utf8]{inputenc}
\usepackage{abbrev}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\usepackage{listings}
\usepackage{booktabs}
\usepackage{breakurl}

\newcommand{\PB}{\textsf{photobiology}\xspace}
\newcommand{\PBVIS}{\textsf{photobiologyVIS}\xspace}
\newcommand{\PBUV}{\textsf{photobiologyUV}\xspace}
\newcommand{\PBPHY}{\textsf{photobiologyPhy}\xspace}
\newcommand{\PBCRY}{\textsf{photobiologyCry}\xspace}
\newcommand{\PBFil}{\textsf{photobiologyFilters}\xspace}
 
\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
opts_chunk$set(fig.path='figure/pos-', fig.align='center', fig.show='hold', size="footnotesize", fig.width=8, fig.height=4, out.width='.95\\textwidth', dev='cairo_pdf')
options(replace.assign=TRUE,width=55)
@

<<example-0-hiden, eval=TRUE, include=FALSE>>=
library(photobiology)
library(photobiologygg)
library(photobiologyFilters)
library(ggplot2)
@

<<own-set-up, echo=FALSE, include=FALSE>>=
my_version <- packageVersion("photobiologyFilters")
@

\title{\PBFil Version \Sexpr{my_version}\\ User Guide}
\author{Pedro J. Aphalo}

\maketitle

\section{Introduction}

We have developed a set of packages to
facilitate the calculation of many different quantities that can be derived from spectral irradiance data. The basic package is called \PB, and the package described here adds transmittance data for some frequently used filters, and a function for interpolating.

\section{Installation and use}

The functions in the package \PBFil are
made available by installing the packages \verb!photobiologyFilter! (once) and
loading it from the library when needed.

To load the package into the workspace we use \verb!library(photobiologyFilter)!.

<<example-0-visible, eval=FALSE>>=
library(photobiology)
library(photobiologygg)
library(photobiologyFilters)
library(ggplot2)
@

\section{Plotting the transmittance spectrum of a filter}

We can plot the data as is, accepting all defaults. As the returned value is a ggplot object, we can modify and add to it as needed.

<<warning=FALSE>>=
plot(uv.226.new.spct) + theme_bw(10)
@

We can also use ggplot (or lattice or base graphics functions) to plot the spectrum.

<<example-1-fig>>=
ggplot(data=uv.226.new.spct, aes(x=w.length, y=Tfr)) + geom_line()
@

If we would like to use a different range of wavelengths, then we can build a new filter.spct by trimming.

<<example-trim>>=
cp.uv.226.spct <- copy(uv.226.new.spct)
my.uv.226.spct <- 
  trim_spct(cp.uv.226.spct, range = c(350,450))
plot(my.uv.226.spct)
@

<<example-interpol>>=
my.uv.226.spct <- 
  interpolate_spct(cp.uv.226.spct, w.length.out = c(350,450), length=201)
plot(my.uv.226.spct)
@

\section{Convoluting spectral irradiance with filter transmittace}

The easy way.

<<>>=
plot(sun.spct * canary.yellow.new.spct)
@

<<echo=TRUE>>=
canary.spct <- sun.spct * canary.yellow.new.spct
canary.spct[ , filter := "canary"]
polyester.spct <- sun.spct * polyester.new.spct
polyester.spct[ , filter := "polyester"]
no.226.spct <- sun.spct * uv.226.new.spct
no.226.spct[ , filter := "no226"]
my.sun.spct <- copy(sun.spct)
my.sun.spct[ , filter := "none"]
all.spct <- rbindspct(list(canary.spct, polyester.spct, no.226.spct, my.sun.spct))
setTimeUnit(all.spct)
@

<<>>=
ggplot(data=all.spct, aes(x=w.length, y=s.e.irrad, colour=filter)) + geom_line()
@

The difficult way, which could execute faster.

<<example-2-data, eval=TRUE>>=
data(sun.spct)
attach(sun.spct)
@

<<example-2-convolution, eval=TRUE>>=
canary.s.irrad <- s.e.irrad * calc_filter_multipliers(w.length, "canary.yellow.new")
polyester.s.e.irrad <- s.e.irrad * calc_filter_multipliers(w.length, "polyester.new")
uv.226.s.e.irrad <- s.e.irrad * calc_filter_multipliers(w.length, "uv.226.new")
filtered.sun.data <- data.frame(w.length=rep(w.length, 4), 
                                s.e.irrad=c(s.e.irrad, canary.s.irrad, polyester.s.e.irrad, uv.226.s.e.irrad),
                                filter=factor(rep(c("none", "Canary", "Polyester", "#226"), 
                                                  rep(length(w.length), 4))))
@

<<example-4>>=
ggplot(data=filtered.sun.data, aes(x=w.length, y=s.e.irrad, colour=filter)) + geom_line()
@

<<>>=
detach(sun.spct)
@

\end{document}
