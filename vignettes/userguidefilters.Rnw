%\VignetteEngine{knitr}
%\VignetteIndexEntry{User Guide}
%\VignetteDepends{knitr, ggplot2}
%\VignetteKeyword{misc}

\documentclass{article}

\usepackage[utf8]{inputenc}
\usepackage{abbrev}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\usepackage{listings}
\usepackage{booktabs}
\usepackage{breakurl}

\newcommand{\PB}{\textsf{photobiology}\xspace}
\newcommand{\PBVIS}{\textsf{photobiologyVIS}\xspace}
\newcommand{\PBUV}{\textsf{photobiologyUV}\xspace}
\newcommand{\PBPHY}{\textsf{photobiologyPhy}\xspace}
\newcommand{\PBCRY}{\textsf{photobiologyCry}\xspace}
\newcommand{\PBFil}{\textsf{photobiologyFilters}\xspace}
 
\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
opts_chunk$set(fig.path='figure/pos-', fig.align='center', fig.show='hold', size="footnotesize", fig.width=8, fig.height=4, out.width='.95\\textwidth', dev='cairo_pdf')
options(replace.assign=TRUE,width=55)
@

<<example-0-hiden, eval=TRUE, include=FALSE>>=
library(photobiology)
library(photobiologygg)
library(photobiologyFilters)
library(ggplot2)
@

<<own-set-up, echo=FALSE, include=FALSE>>=
my_version <- packageVersion("photobiologyFilters")
@

\title{\PBFil Version \Sexpr{my_version}\\ User Guide}
\author{Pedro J. Aphalo}

\maketitle

\section{Introduction}

We have developed a set of packages to
facilitate the calculation of many different quantities that can be derived from spectral irradiance data. The basic package is called \PB, and the package described here adds transmittance data for some frequently used filters, and a function for interpolating.

\section{Installation and use}

The functions in the package \PBFil are
made available by installing the packages \verb!photobiologyFilter! (once) and
loading it from the library when needed.

To load the package into the workspace we use \verb!library(photobiologyFilter)!.

<<example-0-visible, eval=FALSE>>=
library(photobiology)
library(photobiologygg)
library(photobiologyFilters)
library(ggplot2)
@

\section{Calculating average transmittance}

<<>>=
transmittance(uv.226.new.spct, UV_bands())
@

<<>>=
transmittance(uv.226.new.spct, PAR())
@

<<>>=
absorbance(uv.226.new.spct, PAR())
@

\section{Plotting the transmittance spectrum of filters}

We can plot the data as is, accepting all defaults. As the returned value is a ggplot object, we can modify and add to it as needed.

<<warning=FALSE>>=
plot(uv.226.new.spct) + theme_bw(10)
@

We can also row-bind several spectra and plot them in panels.

<<echo=TRUE>>=
filters.spct <- 
  rbindspct(list(canary = canary.yellow.new.spct,
                 polyester = polyester.new.spct,
                 no226 = uv.226.new.spct),
            add.factor = TRUE,
            factor.name = "filter")
@

<<fig.height=8>>=
plot(filters.spct, annotations = "colour.guide") + facet_grid(filter~.)
@

\newpage
We can also use ggplot (or lattice or base graphics functions) to plot the spectrum.

<<example-1-fig>>=
ggplot(data=uv.226.new.spct, aes(x=w.length, y=Tfr)) + geom_line()
@

If we would like to use a different range of wavelengths for several calculations, then we can build a new filter.spct by trimming.

<<example-trim>>=
cp.uv.226.spct <- copy(uv.226.new.spct)
my.uv.226.spct <- 
  trim_spct(cp.uv.226.spct, range = c(350,450))
plot(my.uv.226.spct)
@

\newpage
However, if we only would like to limit the range of wavelengths in the plot, it is even easier to use the \texttt{range} formal argument of function \texttt{plot} to obtain the same plot.

<<warning=FALSE>>=
plot(uv.226.new.spct, range = c(350, 450))
@

\section[]{Convoluting spectral irradiance with\\ filter transmittance}

To simulate the spectral irradiance of a filtered light source we convolute the bare source's irradiance spectrum with the filter transmittance spectrum.

<<>>=
plot(sun.spct * canary.yellow.new.spct)
@

\newpage
If we want to compare the effect of several filters on the spectrum of a light source we can create a combined spectral object by row-binding the source.spct objects obtained as a result of the convolutions.

<<echo=TRUE>>=
all.spct <- 
  rbindspct(list(canary = sun.spct * canary.yellow.new.spct,
                 polyester = sun.spct * polyester.new.spct,
                 no226 = sun.spct * uv.226.new.spct),
            add.factor = TRUE,
            factor.name = "filter")
@

<<fig.height=8>>=
plot(all.spct, annotations = c("colour.guide", "boxes", "labels")) + facet_grid(filter~.)
@

\newpage
If we would like the different spectra plotted on a single panel, we can use, for example, package \texttt{ggplot2}.

<<>>=
ggplot(data=all.spct, aes(x=w.length, y=s.e.irrad, colour=filter)) + geom_line()
@

\end{document}
